# Chapter 2. Generating an API with DreamFactory

We'll begin by generating a secure API which will expose the product data to Citrix Workspace. This is easily accomplished using DreamFactory’s point-and-click administration interface.

Keep these credentials handy and login to your hosted DreamFactory instance. If you don’t remember the URL and login credentials, they’re also found in the welcome email. The URL will look something like this: https://prefix.apps.dreamfactory.com.

After logging into your DreamFactory instance, you’ll be presented with the administration homepage.

![The DreamFactory home page](chapter02/home-page.png)

At the top, you’ll see a navigation bar containing links to the administration interface’s key sections. These include:


* **Apps**: DreamFactory does not support public APIs, requiring at minimum an API key be passed for authentication purposes. These API keys are managed under this tab, and are auto-generated by DreamFactory.
* **Admins**: Manage DreamFactory administrators. In the enterprise (on-premise) DreamFactory version, a root administrator can be created which can additionally delegate limited privileges to other administrators. You’ll manage administrators under this tab.
* **Users**: In addition to authenticating via API keys, DreamFactory supports a wide array of authentication identity providers including Active Directory, Okta, LDAP, OpenID Connect, OAuth, and others. Additionally, users may authenticate using Basic HTTP authentication by authenticating with their email address and password. Those accounts are managed via this tab.
* **Roles**: All DreamFactory-managed APIs are protected by a role-based access control (RBAC). Each RBAC is defined using a point-and-click interface found under this tab. RBACs give you endless control over how your APIs are accessed; for instance you can easily create a database-based read-only API, restrict access to a few specific tables, views, or stored procedures, or selectively combine CRUD (create, read, update, delete) access to various endpoints.
* **Services**: All APIs generated by and mounted to DreamFactory are managed under this tab. Here you can choose from dozens of native connectors to generate APIs from data sources such as databases and file systems, as well as mount third-party APIs and SOAP services, and even script your own APIs using programming languages such as PHP, Python, and NodeJS.
* **API Docs**: Under this tab you’ll find interactive OpenAPI documentation for your APIs. In the case of auto-generated APIs, DreamFactory will automatically generate the associated documentation. For mounted and scripted APIs, you have the option to upload the companion documentation, resulting in it also being displayed under this tab.
* **Schema**: When DreamFactory first connects to a database as part of the API generation process, it will create a snapshot of the schema, including the table names, column data types, column attributes, and foreign key relationships. You can use this tab to review and edit the schemas, as well as configure virtual relationships useful for executing cross-database joins via API calls.
* **Data**: This tab provides a simple CRUD interface for data exposed through a mounted database. 
* **Files**: Like the Data tab, this tab provides a simple interface for viewing files exposed through a mounted file system.
* **Scripts**: It’s often useful to modify API endpoint behavior to validate input, transform responses, and perform more complicated tasks such as API chaining and API composition. You can use the Scripts tab to add this custom logic. NodeJS, PHP, and Python (versions 2 and 3) are supported. You can also manage your scripts in version control using the Bitbucket, GitLab, and GitHub integrations.
* **Config**: The Config tab contains information about the DreamFactory instance, including the version number, installation path, and IP address. You can also perform various administrative tasks here, including managing the instance’s CORS configuration, the cache, and global lookup keys.
Packages: You can use the Packages tab to import and export various DreamFactory settings, including users and APIs.
* **Limits**: You’ll often want to impose volume restrictions on third-parties to reduce the possibility of excessive resource usage. The Limits tab provides a simple point-and-click interface for imposing access limits on specific services, users, roles, endpoints, and even HTTP methods.
* **Scheduler**: Many DreamFactory use cases involve real-time API calls being made to applications such as dashboards and mobile apps. Sometimes though you’ll want to periodically call API endpoints without requiring a human to do so. You can use the Scheduler tab to schedule API calls. It’s also possible to pass payloads into scheduled calls. 
* **Reports**: The Reports tab provides a historical summary of API lifecycles, logging the creation timestamp, creator username, and similar information for any subsequent service modifications or deletions. This information is stored by default in the system database however it can optionally be sent to a remote database for auditing and security purposes.

For this exercise we’ll explore the Services, Roles, and Apps tabs, in that order. 

## Creating a Service

DreamFactory offers native API generators for a wide variety of data sources, including databases such as Microsoft SQL Server, MySQL, and Oracle, file systems such as AWS S3 and SFTP, and source control solutions such as GitHub and Bitbucket. Generating an API from these native generators requires you to supply a set of credentials which allows DreamFactory to connect to the destination data source. In the case of MySQL, you’ll need access to the database’s host name, in addition to account credentials. 

When you signed up for the DreamFactory hosted trial, a test MySQL database containing more than five million records was generated for you. While you’re not strictly required to use this test database to follow along with the examples in this book, it will help because the screenshots and other related content will reflect the data found in this example database. If you’d like to use the example database, you’ll need access to the MySQL database credentials included in your DreamFactory hosted trial welcome email. These credentials include the database hostname (this will match your DreamFactory instance URL prefix), account username and password, database name, and password.

To generate the MySQL API, click on the Services tab, and then click `Create`. You’ll be presented with a select box containing all supported databases. Choose the MySQL option (see below figure).


